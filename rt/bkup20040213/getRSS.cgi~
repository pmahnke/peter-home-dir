#!/usr/local/bin/perl

use lib '/usr/local/lib/perl5/site_perl/5.6.1/';
require ("/home/gartner/cgi-bin/gNOlogin.pl");
require ("/home/gartner/html/rt/getNODocument3.pl");
require ("/home/gartner/html/rt/common.pl");

# Variables
local $server = "www4";
$date         = `date +'%a, %d %b %Y %T GMT'`;

# expects full url to doc
# i.e. http://www4.gartner.com/DisplayDocument?id=361453&acsFlg=accessBought

#    print <<EndofHTML;
#Content-type:  text/html

#<html>
#<body>
#message: $msg<p>$getGARTNERmsg<p>
#EndofHTML

##############################################################
# Get the input from the HTML Form
local $buffer = $ENV{'QUERY_STRING'};

# Split the name - value pairs
if ($buffer) {		  # assumes that form has been filled out
    @pairs = split(/&/, $buffer);
    foreach $pair (@pairs) {
	($name, $value) = split(/=/, $pair);
	$value =~ s/\+/ /g; # spaces
	$value =~ s/\&lt\;/\</g; # less thans
	$value =~ s/\&amp\;/\&/g; # ampersans
	$value =~ s/%(..)/pack("c",hex($1))/ge; # rest

	$FORM{$name} = $value;
    }

} else {


    print <<EndofHTML;
Content-type:  text/html

<html>
<head>
<title>getRSS.cgi</title>
</head>
<body>
<form method=GET>

Resid or Doc Codes: <input type="text" width="500" name="doccd"><i>spaces between</i><p>

<p>Focal Point:</p>
<ul>
<li>Title: <input type="text" name="title" width="500" /></li>
<li>URL: <input type="text" name="url"  width="500" /></li>
<li>Desc: <textarea name="desc" rows="5" cols="40"></textarea></li>
    <li>Pub Date: <input type="text" name="date" value="$date"  width="500" /></li>
</ul>
    
<input type=submit>
</form>
</body>
</html>

EndofHTML

    exit;

}


@docs = split (/ /, $FORM{'doccd'});

foreach (@docs) {
    &getDoc($_);
}

&printOutput;
exit;


sub getDoc {

    local $docCode = "DisplayDocument\?id\="."$_[0]";
    $link = "http:\/\/www4.gartner.com\/"."$docCode";  # .\&acsFlg\=accessBought";
    
    local ($title, $pubDate, $summary, $resId, $auth, $body, $noteNumber, $toc, $price) = &getResearchDetail($link,$server);

    # didn't get title with resid, try doc id
    if (!$title) {
	$msg .= "didn't get $link<br\>\n" if (!$title);
	$docCode = "DisplayDocument\?doc_cd\="."$_[0]";
	$link = "http:\/\/www4.gartner.com\/"."$docCode"; # ."\&acsFlg\=accessBought";
	($title, $pubDate, $summary, $resId, $auth, $body, $noteNumber, $toc, $price) = &getResearchDetail($link,$server);
	$msg .= "didn't get $link<br\>\n" if (!$title);
    }

    #add proper attributes to links
    $link =~ s/uid=Y&fRef=true/call=email&ref=g_emalert/;


    # put dates into proper RSS 2.0 format
    use DateTime::Format::HTTP;
    my $dt = 'DateTime::Format::HTTP';
    $datestring = $dt->parse_datetime($pubDate, 'GMT');
    $dateStr = $dt->format_datetime($datestring);
	
    # clean up title
    $title =~ s/EMEA/Europe, Middle East and Africa/g;
    $title =~ s/ \(Executive Summary\)//g;
    
    

    $line .= "<item>\n  <title>$title</title>\n  <description>$summary</description>\n  <pubDate>$dateStr</pubDate>\n  <link><![CDATA[$link]]></link>\n</item>\n";
}


sub printOutput {

    $header =<<EndofText;
<?xml version="1.0" ?> 
  <rss version="2.0" xmlns:blogChannel="http://backend.userland.com/blogChannelModule">
  <channel>
  <title>Gartner Europe</title> 
  <link>http://europe.gartner.com/</link> 
  <description>Daily update of the featured news and research from Gartner Europe, the world's leading IT research and advisory firm's European website.</description> 
  <language>en-us</language> 
  <copyright>Copyright 2003 Gartner, Inc. and/or its Affiliates. All Rights Reserved. </copyright> 
  <lastBuildDate>$date</lastBuildDate> 
  <docs>http://backend.userland.com/rss</docs> 
  <managingEditor>stephanie.gordon\@gartner.com</managingEditor> 
  <webMaster>peter.mahnke\@gartner.com</webMaster>
  <image>
    <url>http://intl.transitionelement.com/img/ge_logo_small.gif</url>
    <width>110</width>
    <height>45</height>
    <link>http://europe.gartner.com</link>
    <title>Gartner Europe</title>
  </image>
  <ttl>120</ttl>
  <skipDays><day>Saturday</day><day>Sunday</day></skipDays>
  <skipHours><hour>1</hour><hour>2</hour><hour>3</hour><hour>4</hour><hour>5</hour><hour>6</hour><hour>19</hour><hour>20</hour><hour>21</hour><hour>22</hour><hour>23</hour><hour>24</hour></skipHours>
EndofText

$footer =<<EndofText;
  </channel>
  </rss>
EndofText


$header =~ s/</\&lt\;/g;
$footer =~ s/</\&lt\;/g;
$line   =~ s/</\&lt\;/g;

    print  <<EndofHTML;
Content-type:  text/html

<html>
<head>
<title>rss.xml</title>
</head>
<body>
<pre>
$header
&lt;item&gt;
  &lt;title&gt;$FORM{'title'}&lt;/title&gt;
  &lt;description&gt;$FORM{'desc'}&lt;/description&gt;
  &lt;pubDate&gt;$FORM{'date'}&lt;/pubDate&gt;
  &lt;guid&gt;$FORM{'url'}&lt;/guid&gt;
&lt;/item&gt;
$line
$footer
</pre>
</body>
</html>

EndofHTML

}


sub preSpace {

    # add spaces before a line for mailing format

    local $flag   = 0;
    local $out    = "";
    local $space  = "";
    local @in     = split ("<br \/\>", $_[0]);

    local $i = 0;
    until ($i == $_[1]) {
	$i++;
	$space .= " ";
    }

    foreach (@in) {

	if (!$flag) {
	    $out = "$_\n";
	    $flag = 1;
	} else {
	    $out .= "$space$_\n";
	}
    }
    return($out);

}
